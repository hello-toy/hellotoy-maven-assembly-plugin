<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.5 -->

<plugin>
	<name>Apache Maven Assembly Plugin</name>
	<description>A Maven plugin to create archives of your project&apos;s
		sources, classes, dependencies etc. from flexible assembly
		descriptors.</description>
	<groupId>org.hellotoy.maven.plugins</groupId>
	<artifactId>hellotoy-assembly-plugin</artifactId>
	<version>1.0.0</version>
	<goalPrefix>assembly</goalPrefix>
	<isolatedRealm>false</isolatedRealm>
	<inheritedByDefault>true</inheritedByDefault>
	<mojos>
		<mojo>
			<goal>help</goal>
			<description>Display help information on
				maven-assembly-plugin.&lt;br&gt;
				Call &lt;code&gt;mvn assembly:help -Ddetail=true
				-Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter
				details.</description>
			<requiresDirectInvocation>false</requiresDirectInvocation>
			<requiresProject>false</requiresProject>
			<requiresReports>false</requiresReports>
			<aggregator>false</aggregator>
			<requiresOnline>false</requiresOnline>
			<inheritedByDefault>true</inheritedByDefault>
			<implementation>org.apache.maven.plugins.assembly.mojos.HelpMojo
			</implementation>
			<language>java</language>
			<instantiationStrategy>per-lookup</instantiationStrategy>
			<executionStrategy>once-per-session</executionStrategy>
			<threadSafe>true</threadSafe>
			<parameters>
				<parameter>
					<name>detail</name>
					<type>boolean</type>
					<required>false</required>
					<editable>true</editable>
					<description>If &lt;code&gt;true&lt;/code&gt;, display all settable
						properties for each goal.</description>
				</parameter>
				<parameter>
					<name>goal</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The name of the goal for which to show help. If
						unspecified, all goals will be displayed.</description>
				</parameter>
				<parameter>
					<name>indentSize</name>
					<type>int</type>
					<required>false</required>
					<editable>true</editable>
					<description>The number of spaces per indentation level, should be
						positive.</description>
				</parameter>
				<parameter>
					<name>lineLength</name>
					<type>int</type>
					<required>false</required>
					<editable>true</editable>
					<description>The maximum length of a display line, should be
						positive.</description>
				</parameter>
			</parameters>
			<configuration>
				<detail implementation="boolean" default-value="false">${detail}
				</detail>
				<goal implementation="java.lang.String">${goal}</goal>
				<indentSize implementation="int" default-value="2">${indentSize}
				</indentSize>
				<lineLength implementation="int" default-value="80">${lineLength}
				</lineLength>
			</configuration>
		</mojo>
		<mojo>
			<goal>edo</goal>
			<description>Assemble an application bundle or distribution from an
				assembly descriptor. This goal is suitable either for binding
				to the lifecycle or calling directly from the command line (provided
				all required files are available before the
				build starts, or are produced by another goal specified before this one
				on the command line).
				&lt;br &gt;
				Note that the parameters {@code descriptors}, {@code descriptorRefs},
				and {@code descriptorSourceDirectory}
				are disjoint, i.e., they are not combined during descriptor location
				calculation.
			</description>
			<requiresDependencyResolution>test</requiresDependencyResolution>
			<requiresDirectInvocation>false</requiresDirectInvocation>
			<requiresProject>true</requiresProject>
			<requiresReports>false</requiresReports>
			<aggregator>false</aggregator>
			<requiresOnline>false</requiresOnline>
			<inheritedByDefault>false</inheritedByDefault>
			<implementation>org.hellotoy.maven.plugins.assembly.mojos.ToyAssemblyMojo
			</implementation>
			<language>java</language>
			<instantiationStrategy>per-lookup</instantiationStrategy>
			<executionStrategy>once-per-session</executionStrategy>
			<threadSafe>true</threadSafe>
			<parameters>
				<parameter>
					<name>additionalProperties</name>
					<type>java.util.Properties</type>
					<since>3.3.0</since>
					<required>false</required>
					<editable>true</editable>
					<description>A set of additional properties to use for filtering
					</description>
				</parameter>
				<parameter>
					<name>appendAssemblyId</name>
					<type>boolean</type>
					<required>false</required>
					<editable>true</editable>
					<description>Set to false to exclude the assembly id from the
						assembly final name, and to create the resultant assembly
						artifacts without classifier. As such, an assembly artifact having
						the same format as the packaging of the
						current Maven project will replace the file for this main project
						artifact.
					</description>
				</parameter>
				<parameter>
					<name>archive</name>
					<type>org.apache.maven.archiver.MavenArchiveConfiguration</type>
					<required>false</required>
					<editable>true</editable>
					<description>This is a set of instructions to the archive builder,
						especially for building .jar files. It enables you to
						specify a Manifest file for the jar, in addition to other options. See
						&lt;a
						href=&quot;http://maven.apache.org/shared/maven-archiver/index.html&quot;&gt;Maven
						Archiver Reference&lt;/a&gt;.</description>
				</parameter>
				<parameter>
					<name>archiveBaseDirectory</name>
					<type>java.io.File</type>
					<required>false</required>
					<editable>true</editable>
					<description>This is the base directory from which archive files
						are created. This base directory pre-pended to any
						&lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; specifications
						in the assembly descriptor. This is an optional parameter.
					</description>
				</parameter>
				<parameter>
					<name>archiverConfig</name>
					<type>org.codehaus.plexus.configuration.PlexusConfiguration</type>
					<since>2.2-beta-3</since>
					<required>false</required>
					<editable>true</editable>
					<description>Allows additional configuration options that are
						specific to a particular type of archive format. This is
						intended to capture an XML configuration that will be used to reflectively
						setup the options on the archiver
						instance. &lt;br/&gt; To see the possible options for archiver
						configuration visit the
						&lt;a
						href=&quot;https://codehaus-plexus.github.io/plexus-archiver/apidocs/org/codehaus/plexus/archiver/Archiver.html&quot;&gt;
						Plexus Archiver Documentation&lt;/a&gt; &lt;br/&gt; For instance,
						to direct an assembly with the &quot;ear&quot; format to use a
						particular deployment descriptor, you should specify the following
						for the archiverConfig value in your plugin
						configuration: &lt;br/&gt;
						&lt;p/&gt;
						&lt;p/&gt;
						&lt;pre&gt;
						&amp;lt;appxml&amp;gt;${project.basedir}/somepath/app.xml&amp;lt;/appxml&amp;gt;
						&lt;/pre&gt;
						&lt;p/&gt;</description>
				</parameter>
				<parameter>
					<name>attach</name>
					<type>boolean</type>
					<since>2.2-beta-1</since>
					<required>false</required>
					<editable>true</editable>
					<description>Controls whether the assembly plugin tries to attach
						the resulting assembly to the project.</description>
				</parameter>
				<parameter>
					<name>basedir</name>
					<type>java.io.File</type>
					<required>true</required>
					<editable>false</editable>
					<description>Base directory of the project.</description>
				</parameter>
				<parameter>
					<name>delimiters</name>
					<type>java.util.List</type>
					<since>2.4</since>
					<required>false</required>
					<editable>true</editable>
					<description>&lt;p&gt;
						Set of delimiters for expressions to filter within the resources.
						These delimiters are specified in the form
						&apos;beginToken*endToken&apos;. If no &apos;*&apos; is given, the
						delimiter is assumed to be the same for start and end.
						&lt;/p&gt;
						&lt;p&gt;
						So, the default filtering delimiters might be specified as:
						&lt;/p&gt;
						&lt;p/&gt;
						&lt;pre&gt;
						&amp;lt;delimiters&amp;gt;
						&amp;lt;delimiter&amp;gt;${*}&amp;lt;/delimiter&amp;gt;
						&amp;lt;delimiter&amp;gt;@&amp;lt;/delimiter&amp;gt;
						&amp;lt;/delimiters&amp;gt;
						&lt;/pre&gt;
						&lt;p&gt;
						Since the &apos;@&apos; delimiter is the same on both ends, we
						don&apos;t need to specify &apos;@*@&apos; (though we can).
						&lt;/p&gt;</description>
				</parameter>
				<parameter>
					<name>descriptorRefs</name>
					<type>java.lang.String[]</type>
					<required>false</required>
					<editable>true</editable>
					<description>A list of references to assembly descriptors available
						on the plugin&apos;s classpath. The default classpath includes
						these built-in descriptors: &lt;code&gt;bin&lt;/code&gt;,
						&lt;code&gt;jar-with-dependencies&lt;/code&gt;,
						&lt;code&gt;src&lt;/code&gt;, and
						&lt;code&gt;project&lt;/code&gt;. You can add others by adding
						dependencies
						to the plugin.
					</description>
				</parameter>
				<parameter>
					<name>descriptorSourceDirectory</name>
					<type>java.io.File</type>
					<required>false</required>
					<editable>true</editable>
					<description>Directory to scan for descriptor files in.
						&lt;b&gt;NOTE:&lt;/b&gt; This may not work correctly with assembly
						components.</description>
				</parameter>
				<parameter>
					<name>descriptors</name>
					<type>java.lang.String[]</type>
					<required>false</required>
					<editable>true</editable>
					<description>A list of descriptor files to generate from.
					</description>
				</parameter>
				<parameter>
					<name>dryRun</name>
					<type>boolean</type>
					<required>false</required>
					<editable>true</editable>
					<description>If this flag is set, everything up to the call to
						Archiver.createArchive() will be executed.</description>
				</parameter>
				<parameter>
					<name>encoding</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>The character encoding scheme to be applied when
						filtering resources.</description>
				</parameter>
				<parameter>
					<name>escapeString</name>
					<type>java.lang.String</type>
					<since>2.4</since>
					<required>false</required>
					<editable>true</editable>
					<description>Expressions preceded with this String won&apos;t be
						interpolated. If you use &quot;\&quot; as the escape string then
						\${foo}
						will be replaced with ${foo}.
					</description>
				</parameter>
				<parameter>
					<name>filters</name>
					<type>java.util.List</type>
					<required>false</required>
					<editable>true</editable>
					<description>The list of extra filter properties files to be used
						along with System properties, project properties, and filter
						properties files specified in the POM build/filters section, which
						should be used for the filtering during the
						current mojo execution. &lt;br/&gt; Normally, these will be configured
						from a plugin&apos;s execution section, to provide a
						different set of filters for a particular execution.
					</description>
				</parameter>
				<parameter>
					<name>finalName</name>
					<type>java.lang.String</type>
					<required>true</required>
					<editable>false</editable>
					<description>The filename of the assembled distribution file.
					</description>
				</parameter>
				<parameter>
					<name>formats</name>
					<type>java.util.List</type>
					<required>false</required>
					<editable>true</editable>
					<description>Specifies the formats of the assembly. Multiple
						formats can be supplied and the Assembly Plugin will generate an
						archive for each desired formats. When deploying your project, all
						file formats specified will also be deployed.
						A format is specified by supplying one of the following values in a
						&amp;lt;format&amp;gt; subelement:
						&lt;ul&gt;
						&lt;li&gt;&lt;em&gt;dir&lt;/em&gt; - Creates a directory&lt;/li&gt;
						&lt;li&gt;&lt;em&gt;zip&lt;/em&gt; - Creates a ZIP file
						format&lt;/li&gt;
						&lt;li&gt;&lt;em&gt;tar&lt;/em&gt; - Creates a TAR format&lt;/li&gt;
						&lt;li&gt;&lt;em&gt;tar.gz&lt;/em&gt; or &lt;em&gt;tgz&lt;/em&gt;
						- Creates a gzip&apos;d TAR format&lt;/li&gt;
						&lt;li&gt;&lt;em&gt;tar.bz2&lt;/em&gt; or
						&lt;em&gt;tbz2&lt;/em&gt; - Creates a bzip&apos;d TAR
						format&lt;/li&gt;
						&lt;li&gt;&lt;em&gt;tar.snappy&lt;/em&gt; - Creates a snappy&apos;d TAR format&lt;/li&gt;
						&lt;li&gt;&lt;em&gt;tar.xz&lt;/em&gt; or &lt;em&gt;txz&lt;/em&gt;
						- Creates a xz&apos;d TAR format&lt;/li&gt;
						&lt;/ul&gt;</description>
				</parameter>
				<parameter>
					<name>ignoreDirFormatExtensions</name>
					<type>boolean</type>
					<required>false</required>
					<editable>true</editable>
					<description>If this flag is set, the &quot;.dir&quot; suffix will
						be suppressed in the output directory name when using
						assembly/format
						== &apos;dir&apos; and other formats that begin with
						&apos;dir&apos;. &lt;br/&gt;
						&lt;b&gt;NOTE:&lt;/b&gt; Since 2.2-beta-3, the default-value for this is true, NOT false
						as it used to be.</description>
				</parameter>
				<parameter>
					<name>ignoreMissingDescriptor</name>
					<type>boolean</type>
					<required>false</required>
					<editable>true</editable>
					<description>Set to true in order to not fail when a descriptor is
						missing.</description>
				</parameter>
				<parameter>
					<name>ignorePermissions</name>
					<type>boolean</type>
					<since>2.2</since>
					<required>false</required>
					<editable>true</editable>
					<description>&lt;p&gt;
						Set to &lt;code&gt;true&lt;/code&gt; in order to avoid all chmod
						calls.
						&lt;/p&gt;
						&lt;p/&gt;
						&lt;p&gt;
						&lt;b&gt;NOTE:&lt;/b&gt; This will cause the assembly plugin to
						&lt;b&gt;DISREGARD&lt;/b&gt; all fileMode/directoryMode settings
						in the
						assembly descriptor, and all file permissions in unpacked dependencies!
						&lt;/p&gt;</description>
				</parameter>
				<parameter>
					<name>includeProjectBuildFilters</name>
					<type>boolean</type>
					<since>2.4.2</since>
					<required>false</required>
					<editable>true</editable>
					<description>If True (default) then the ${project.build.filters}
						are also used in addition to any further filters defined for
						the Assembly.
					</description>
				</parameter>
				<parameter>
					<name>localRepository</name>
					<type>org.apache.maven.artifact.repository.ArtifactRepository
					</type>
					<required>true</required>
					<editable>false</editable>
					<description>Local Maven repository where artifacts are cached
						during the build process.</description>
				</parameter>
				<parameter>
					<name>mavenSession</name>
					<type>org.apache.maven.execution.MavenSession</type>
					<required>true</required>
					<editable>false</editable>
					<description>The Maven Session Object</description>
				</parameter>
				<parameter>
					<name>mergeManifestMode</name>
					<type>java.lang.String</type>
					<since>3</since>
					<required>false</required>
					<editable>true</editable>
					<description>sets the merge manifest mode in the JarArchiver
					</description>
				</parameter>
				<parameter>
					<name>outputDirectory</name>
					<type>java.io.File</type>
					<required>true</required>
					<editable>true</editable>
					<description>The output directory of the assembled distribution
						file.</description>
				</parameter>
				<parameter>
					<name>outputTimestamp</name>
					<type>java.lang.String</type>
					<since>3.2.0</since>
					<required>false</required>
					<editable>true</editable>
					<description>Timestamp for reproducible output archive entries,
						either formatted as ISO 8601
						&lt;code&gt;yyyy-MM-dd&apos;T&apos;HH:mm:ssXXX&lt;/code&gt; or as
						an int representing seconds since the epoch (like
						&lt;a
						href=&quot;https://reproducible-builds.org/docs/source-date-epoch/&quot;&gt;SOURCE_DATE_EPOCH&lt;/a&gt;).
					</description>
				</parameter>
				<parameter>
					<name>overrideGid</name>
					<type>java.lang.Integer</type>
					<required>false</required>
					<editable>true</editable>
					<description>Override of group ID in archive type which can store
						it.</description>
				</parameter>
				<parameter>
					<name>overrideGroupName</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>Override of group name in archive type which can store
						it.</description>
				</parameter>
				<parameter>
					<name>overrideUid</name>
					<type>java.lang.Integer</type>
					<required>false</required>
					<editable>true</editable>
					<description>Override of user ID in archive type which can store
						it.</description>
				</parameter>
				<parameter>
					<name>overrideUserName</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>Override of user name in archive type which can store
						it.</description>
				</parameter>
				<parameter>
					<name>plugin</name>
					<type>org.apache.maven.plugin.descriptor.PluginDescriptor</type>
					<required>false</required>
					<editable>false</editable>
					<description></description>
				</parameter>
				<parameter>
					<name>project</name>
					<type>org.apache.maven.project.MavenProject</type>
					<required>true</required>
					<editable>false</editable>
					<description></description>
				</parameter>
				<parameter>
					<name>reactorProjects</name>
					<type>java.util.List</type>
					<required>true</required>
					<editable>false</editable>
					<description>Contains the full list of projects in the reactor.
					</description>
				</parameter>
				<parameter>
					<name>recompressZippedFiles</name>
					<type>boolean</type>
					<since>2.4</since>
					<required>false</required>
					<editable>true</editable>
					<description>Indicates if zip archives (jar,zip etc) being added to
						the assembly should be compressed again. Compressing again
						can result in smaller archive size, but gives noticeably longer
						execution time.
					</description>
				</parameter>
				<parameter>
					<name>remoteRepositories</name>
					<type>java.util.List</type>
					<required>true</required>
					<editable>false</editable>
					<description></description>
				</parameter>
				<parameter>
					<name>runOnlyAtExecutionRoot</name>
					<type>boolean</type>
					<since>2.2-beta-4</since>
					<required>false</required>
					<editable>true</editable>
					<description>This will cause the assembly to run only at the top of
						a given module tree. That is, run in the project contained
						in the same folder where the mvn execution was launched.
					</description>
				</parameter>
				<parameter>
					<name>siteDirectory</name>
					<type>java.io.File</type>
					<required>false</required>
					<editable>false</editable>
					<description>Directory for site generated.</description>
				</parameter>
				<parameter>
					<name>skipAssembly</name>
					<type>boolean</type>
					<required>false</required>
					<editable>true</editable>
					<description>Flag allowing one or more executions of the assembly
						plugin to be configured as skipped for a particular build.
						This makes the assembly plugin more controllable from profiles.
					</description>
				</parameter>
				<parameter>
					<name>tarLongFileMode</name>
					<type>java.lang.String</type>
					<required>false</required>
					<editable>true</editable>
					<description>Sets the TarArchiver behavior on file paths with more
						than 100 characters length. Valid values are: &quot;warn&quot;
						(default), &quot;fail&quot;, &quot;truncate&quot;,
						&quot;gnu&quot;, &quot;posix&quot;, &quot;posix_warn&quot; or
						&quot;omit&quot;.</description>
				</parameter>
				<parameter>
					<name>tempRoot</name>
					<type>java.io.File</type>
					<required>true</required>
					<editable>false</editable>
					<description>Temporary directory that contain the files to be
						assembled.</description>
				</parameter>
				<parameter>
					<name>updateOnly</name>
					<type>boolean</type>
					<since>2.2</since>
					<required>false</required>
					<editable>true</editable>
					<description>This will cause the assembly to only update an
						existing archive, if it exists.
						&lt;p&gt;
						&lt;strong&gt;Note:&lt;/strong&gt; The property that can be used on the command line was misspelled
						as &quot;assembly.updatOnly&quot;
						in versions prior to version 2.4.
						&lt;/p&gt;</description>
				</parameter>
				<parameter>
					<name>useJvmChmod</name>
					<type>boolean</type>
					<since>2.2</since>
					<deprecated>Not used anymore and will be removed in future version
					</deprecated>
					<required>false</required>
					<editable>true</editable>
					<description></description>
				</parameter>
				<parameter>
					<name>workDirectory</name>
					<type>java.io.File</type>
					<required>true</required>
					<editable>true</editable>
					<description>Directory to unpack JARs into if needed</description>
				</parameter>
			</parameters>
			<configuration>
				<appendAssemblyId implementation="boolean"
					default-value="true">${assembly.appendAssemblyId}</appendAssemblyId>
				<attach implementation="boolean" default-value="true">${assembly.attach}
				</attach>
				<basedir implementation="java.io.File"
					default-value="${project.basedir}" />
				<dryRun implementation="boolean" default-value="false">${assembly.dryRun}
				</dryRun>
				<encoding implementation="java.lang.String"
					default-value="${project.build.sourceEncoding}">${encoding}</encoding>
				<escapeString implementation="java.lang.String">${assembly.escapeString}
				</escapeString>
				<finalName implementation="java.lang.String"
					default-value="${project.build.finalName}" />
				<ignoreDirFormatExtensions
					implementation="boolean" default-value="true" />
				<ignoreMissingDescriptor
					implementation="boolean" default-value="false">${assembly.ignoreMissingDescriptor}
				</ignoreMissingDescriptor>
				<ignorePermissions implementation="boolean"
					default-value="false">${assembly.ignorePermissions}</ignorePermissions>
				<includeProjectBuildFilters
					implementation="boolean" default-value="true">${assembly.includeProjectBuildFilters}
				</includeProjectBuildFilters>
				<localRepository
					implementation="org.apache.maven.artifact.repository.ArtifactRepository"
					default-value="${localRepository}" />
				<mavenSession
					implementation="org.apache.maven.execution.MavenSession"
					default-value="${session}" />
				<outputDirectory implementation="java.io.File"
					default-value="${project.build.directory}" />
				<outputTimestamp implementation="java.lang.String"
					default-value="${project.build.outputTimestamp}" />
				<plugin
					implementation="org.apache.maven.plugin.descriptor.PluginDescriptor"
					default-value="${plugin}" />
				<project
					implementation="org.apache.maven.project.MavenProject"
					default-value="${project}" />
				<reactorProjects implementation="java.util.List"
					default-value="${reactorProjects}" />
				<recompressZippedFiles
					implementation="boolean" default-value="true" />
				<remoteRepositories
					implementation="java.util.List"
					default-value="${project.remoteArtifactRepositories}" />
				<runOnlyAtExecutionRoot
					implementation="boolean" default-value="false">${assembly.runOnlyAtExecutionRoot}
				</runOnlyAtExecutionRoot>
				<siteDirectory implementation="java.io.File"
					default-value="${project.reporting.outputDirectory}" />
				<skipAssembly implementation="boolean"
					default-value="false">${assembly.skipAssembly}</skipAssembly>
				<tarLongFileMode implementation="java.lang.String"
					default-value="warn">${assembly.tarLongFileMode}</tarLongFileMode>
				<tempRoot implementation="java.io.File"
					default-value="${project.build.directory}/archive-tmp" />
				<updateOnly implementation="boolean"
					default-value="false">${assembly.updateOnly}</updateOnly>
				<useJvmChmod implementation="boolean"
					default-value="false">${assembly.useJvmChmod}</useJvmChmod>
				<workDirectory implementation="java.io.File"
					default-value="${project.build.directory}/assembly/work" />
			</configuration>
			<requirements>
				<requirement>
					<role>org.apache.maven.plugins.assembly.archive.AssemblyArchiver
					</role>
					<field-name>assemblyArchiver</field-name>
				</requirement>
				<requirement>
					<role>org.apache.maven.plugins.assembly.io.AssemblyReader</role>
					<field-name>assemblyReader</field-name>
				</requirement>
				<requirement>
					<role>org.apache.maven.shared.filtering.MavenReaderFilter</role>
					<field-name>mavenReaderFilter</field-name>
				</requirement>
				<requirement>
					<role>org.apache.maven.project.MavenProjectHelper</role>
					<field-name>projectHelper</field-name>
				</requirement>
			</requirements>
		</mojo>
	</mojos>
	<dependencies>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.sisu</groupId>
			<artifactId>sisu-inject-plexus</artifactId>
			<type>jar</type>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.sisu</groupId>
			<artifactId>sisu-inject-bean</artifactId>
			<type>jar</type>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.sisu</groupId>
			<artifactId>sisu-guice</artifactId>
			<type>jar</type>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-settings</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-settings-builder</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-repository-metadata</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model-builder</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-aether-provider</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.aether</groupId>
			<artifactId>aether-impl</artifactId>
			<type>jar</type>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.aether</groupId>
			<artifactId>aether-spi</artifactId>
			<type>jar</type>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.aether</groupId>
			<artifactId>aether-api</artifactId>
			<type>jar</type>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.aether</groupId>
			<artifactId>aether-util</artifactId>
			<type>jar</type>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-classworlds</artifactId>
			<type>jar</type>
			<version>2.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.plexus</groupId>
			<artifactId>plexus-sec-dispatcher</artifactId>
			<type>jar</type>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.plexus</groupId>
			<artifactId>plexus-cipher</artifactId>
			<type>jar</type>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.wagon</groupId>
			<artifactId>wagon-provider-api</artifactId>
			<type>jar</type>
			<version>1.0-beta-6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<type>jar</type>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-common-artifact-filters</artifactId>
			<type>jar</type>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-shared-utils</artifactId>
			<type>jar</type>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-artifact-transfer</artifactId>
			<type>jar</type>
			<version>0.11.0</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<type>jar</type>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-interpolation</artifactId>
			<type>jar</type>
			<version>1.25</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-archiver</artifactId>
			<type>jar</type>
			<version>4.2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<type>jar</type>
			<version>1.19</version>
		</dependency>
		<dependency>
			<groupId>org.iq80.snappy</groupId>
			<artifactId>snappy</artifactId>
			<type>jar</type>
			<version>0.4</version>
		</dependency>
		<dependency>
			<groupId>org.tukaani</groupId>
			<artifactId>xz</artifactId>
			<type>jar</type>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>file-management</artifactId>
			<type>jar</type>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-shared-io</artifactId>
			<type>jar</type>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<type>jar</type>
			<version>2.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-filtering</artifactId>
			<type>jar</type>
			<version>3.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.sonatype.plexus</groupId>
			<artifactId>plexus-build-api</artifactId>
			<type>jar</type>
			<version>0.0.7</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-io</artifactId>
			<type>jar</type>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-archiver</artifactId>
			<type>jar</type>
			<version>3.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<type>jar</type>
			<version>3.3.0</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<type>jar</type>
			<version>1.6</version>
		</dependency>
	</dependencies>
</plugin>